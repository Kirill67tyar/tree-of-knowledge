"""
Задание 1.2.9

Реализуйте программу, которая будет вычислять количество различных объектов в списке.
Два объекта a и b считаются различными, если a is b равно False.

Вашей программе доступна переменная с названием objects, которая ссылается на список,
содержащий не более 100 объектов. Выведите количество различных объектов в этом списке.

Формат ожидаемой программы:

ans = 0
for obj in objects: # доступная переменная objects
    ans += 1

print(ans)

Примечание:
Количеством различных объектов называется максимальный размер множества объектов,
в котором любые два объекта являются различными.

Рассмотрим пример:
objects = [1, 2, 1, 2, 3] # будем считать, что одинаковые числа
соответствуют одинаковым объектам, а различные – различным

Тогда все различные объекты являют собой множество {1, 2, 3}. Таким образом, количество различных объектов равно трём.

"""
# objects = [1, 2, 3, ]
# print(len(set(list(map(id, objects)))))
#
# # OR
#
# s = []
# for obj in objects:
#     if id(obj) not in s:
#         s.append(id(obj))
#
# print(len(s))
# # --------------------------------
# print(__module__)


"""
Задание 1.3.9

Напишите реализацию функции closest_mod_5, принимающую в качестве единственного аргумента 
целое число x и возвращающую самое маленькое целое число y, такое что:

y больше или равно x
y делится нацело на 5
Формат того, что ожидается от вас в качестве ответа:

def closest_mod_5(x):
    if x % 5 == 0:
        return x
    return "I don't know :("
"""

# def closest_mod_51(x):
#     if x % 5 == 0:
#         return x
#     elif x > 5:
#         return x + 5 - x % 5
#     elif x < 5:
#         return x + (5 - x % 5)
#     return "I don't know :("
#
#
# def closest_mod_5(x):
#     ost = x % 5
#     if ost == 0:
#         return x
#     else:
#         x += 5 - ost
#     return x


"""


Сочетанием из n элементов по k называется подмножество этих n элементов размера k.
Два сочетания называются различными, если одно из сочетаний содержит элемент, который не содержит другое.
Числом сочетаний из n по k называется количество различных сочетаний из n по k. Обозначим это число за C(n, k).

Пример:
Пусть n = 3, т. е. есть три элемента (1, 2, 3). Пусть k = 2.
Все различные сочетания из 3 элементов по 2: (1, 2), (1, 3), (2, 3).
Различных сочетаний три, поэтому C(3, 2) = 3.

Несложно понять, что C(n, 0) = 1, так как из n элементов выбрать 0 можно единственным образом, а именно, ничего не выбрать.
Также несложно понять, что если k > n, то C(n, k) = 0, так как невозможно, например, из трех элементов выбрать пять.

Для вычисления C(n, k) в других случаях используется следующая рекуррентная формула:
C(n, k) = C(n - 1, k) + C(n - 1, k - 1).

Реализуйте программу, которая для заданных n и k вычисляет C(n, k).

Вашей программе на вход подается строка, содержащая два целых числа n и k (1 ≤ n ≤ 10, 0 ≤ k ≤ 10).
Ваша программа должна вывести единственное число: C(n, k).

Примечание:
Считать два числа n и k вы можете, например, следующим образом:

n, k = map(int, input().split())
Sample Input 1:

3 2
Sample Output 1:

3
Sample Input 2:

10 5 # (1,2,3,4,8)
Sample Output 2:

252
"""

t_c = 18
tmp = 'ok'

def farenheit(t_c):
    tmp = t_c * 9 / 5
    return tmp + 32

print(farenheit(t_c))
print(tmp)

a = 1