from pprint import pprint as pp

"""
Мы раассмотриваем два типа файлов:

1. текстовые
2. бинарные (двоичные)

--- текстовые
 - содержимое данных файлов является текстом.
 - может быть интерпретировано в качетсве текста

расширения текстовых файлов:
 - py, txt, doc, html и много много много других форматов

--- бинарные (двоичные)
 - содержимое мы не можем интерпретировать в качестве текста
 
расширения бинарных файлов:
 - pyc, mp3, jpg, png, gif - в обзем всё то, что мы за текст не считаем
 
Для самых популярных форматов бинарных данных, существуют
библиотеки Python, которые могут с данными этих форматов работать

для изображений - pillow:
https://pillow.readthedocs.io/en/stable/

для музыкальных данных - vawe, audio-tools


***** open
sources:
    https://docs.python.org/3/library/functions.html#open
    
Character

Meaning

'r' - open for reading (default)

'w' - open for writing, truncating the file first
      !! стирает содержимое файла, когда он открывается

'x' - open for exclusive creation, failing if the file already exists

'a' - open for writing, appending to the end of file if it exists 
      открыть для записи, запись ведётся в конец
      
'b' - binary mode

't' - text mode (default)

'+' - open for updating (reading and writing)


# -----------------------------------------
# r (read) - открыть для чтения (по умолчанию)
# w (write) - открыть для записи, при открытии содержимое файла стирается
# a (append) - открыть для записи, запись ведётся в конец
# b (binary) - открыть в бинарном режиме
# t (text) - открыть в текстовом режиме (по умолчанию)
# r+ - открыть для чтения и записи
# w+ - открыть для чтения и записи, при открытии содержимое файла стирается
# x - open for exclusive creation, failing if the file already exists
# -----------------------------------------


Если работаешь с бинарным файлом, то добавляй букву 'b' к действиям (воторой аргумент функции open):
    'rb'
    'wb'
и т.д.

фунция open возвращает нам file_object

file_object - можем читать данные, записывать данные

НО!! - самое главное file_object нужно закрывать, когда работа с файлом закончена

    file_object.close()

потому что нужно освобождать те системные ресурсы, 
которые были потрачены на соединение с файлом






























"""