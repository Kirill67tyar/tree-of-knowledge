"""

Любой объект в Pytho обладает свойством правдивости - True | False
функция bool() вызывает метод __bool__(self), а он уже показывет False или True


1. По умолчанию все новые классы в Python True

    class C:
        pass
    bool(C())  # True

2. Этот метод не определён в коллекциях, отображениях. Есть в int и float
Если этого метода нет - интерпретатор будет шлядеть в __len__()

    print(*dir(tuple),sep='\n')
    print(*dir(list),sep='\n')


3. Если мы определим __len__ у себя - интерпретатор тоже будет глядеть
в __len__()

     class C:
         def __len__(self):
             return 0

    bool(C())  # False

4. В if elif while and or not тоже вызывается метод __bool__ или __len__



Итого:
    1. Если метода __bool__ нет - интерпретатор смотрит на __len__
    2. Если нету __len__ и __bool__ то экземпляр всегда будет правдивый
    3. В методе __bool__ нужно возвращать либо истину, либо ложь
"""



