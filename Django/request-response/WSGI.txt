---------------------------------------------------------------------------------------------
                    WSGI
https://wsgi.readthedocs.io/en/latest/
https://docs.djangoproject.com/en/3.2/howto/deployment/wsgi/
Очень, очень хорошая статья
https://habr.com/ru/post/426957/
WSGI (Web Server Gateway Interface) - это интерфейс для взаимодействия
python приложения и веб-сервера. Является своего рода стандартом
при запуске Django-приложений.
Когда мы создаем новый проект с помощью startproject
Django добавляет файл wsgi.py
Он содрежит вызываемый объект, который используется WSGI в качестве точки
входа в приложение. WSGI применим как и для разработки, так и для боевого режима
****** uWSGI
https://uwsgi-docs.readthedocs.io/en/latest/
https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html
uWSGI (программа) - очень быстрый сервер для python.
Он взаимодействует с python-приложениями посредством WSGI
Именно uWSGI занимается приобразованием запросов в формат,
с которым может рабоать django
Как это все работает для Django:
            :www
            :
            :       HTTP                    Socket                      WSGI
| Client |------------------>| NGINX |------------------>| uWSGI |------------------>| Django |
| browser|<------------------|       |<------------------|       |<------------------|        |
            :
В такой цепочке запрос от клиента обрабатывается в несколько шагов:
1) NGINX принимает HTTP запрос
2) Если запрос на получение статических файлов, его обрабатывает сам NGINX
Если запрос на что-то другое, NGINX делегирует его обрабоку веб-серверу uWSGI через сокет
3) uWSGI принимает входящий запрос, и передает его в Django-приложение.
Результирующий HTTP ответ передается по цепочке в обратном порядке,
и NGINX отправляет его клиенту.