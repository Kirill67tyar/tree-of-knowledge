#                   Денормализация

# Денормализация - это процесс, когда мы разделяем данные на несколько логически связанных блоков
# так что обращение к ним стало более эффективным с точки зрения доступа к базе данных.

# Денормализация (англ. denormalization) — намеренное приведение структуры базы данных в состояние,
# не соответствующее критериям нормализации, обычно проводимое с целью ускорения операций чтения
# из базы за счет добавления избыточных данных.
# https://habr.com/ru/post/64524/
# Также гугли что такое нормализация - нормализация и денормализация - это базовые
# понятия для работы с бд
# https://ru.wikipedia.org/wiki/%D0%9D%D0%BE%D1%80%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D1%84%D0%BE%D1%80%D0%BC%D0%B0
# https://ru.wikipedia.org/wiki/%D0%9F%D1%8F%D1%82%D0%B0%D1%8F_%D0%BD%D0%BE%D1%80%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D1%84%D0%BE%D1%80%D0%BC%D0%B0#%D0%94%D0%B5%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%B7%D0%B8%D1%86%D0%B8%D1%8F_%D0%B1%D0%B5%D0%B7_%D0%BF%D0%BE%D1%82%D0%B5%D1%80%D1%8C

# Что есть денормализация? Вот у нас есть две модели User и Image
# и связаны они по полю ManyToMany (промежутоная таблица).
# Каждый юзер может лайкнуть сколько угодно картинок. Каждая картинка может быть лайкнута
# сколько угодно раз.
# Как отсортировать QuerySet Image по количеству лайков?
# images = Image.objects.annotate(cnt_likes=Count('users_liked')).order_by('-cnt_likes')
# Такой подход имеет недостаток, так как мы снала делаем запрос количетво лайков
# потом сортируем. В общем полуается довольно затратный запрос.
# А можно просто в Image задать поле PositiveIntegerField и это поле будет отвеать
# за количество лайков. Когда создается новая запись в прокси таблице о том что юзер лайкнул картинку
# просто увеличивать PositiveIntegerField на 1. Короче это поле будет отвеать за
# количество лайков у экземпляра Image.
# Такой процесс и называется денормализацией.

# Недостатки - увелечение сложности обновления данных и поддержания их целостности