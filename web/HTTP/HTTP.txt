sources:
	https://python-course.readthedocs.io/projects/year2/en/latest/lessons/07-simple-http-server.html

HTTP

Итак, что же представляет из себя один из основных протоколов интернета? 
Педантов отправлю к RFC2616, а остальным расскажу по-человечески :)

Этот протокол описывает взаимодействие между двумя компьютерами (клиентом и сервером), 
построенное на базе сообщений, называемых запрос (Request) и ответ (Response). 
Каждое сообщение состоит из трех частей: стартовая строка, заголовки и тело. 
При этом обязательной является только стартовая строка.

Стартовые строки для запроса и ответа имеют различный формат — нам интересна только 
стартовая строка запроса, которая выглядит так:

METHOD URI HTTP/VERSION,

где METHOD — это как раз метод HTTP-запроса, URI — идентификатор ресурса, VERSION — версия протокола 
(на данный момент актуальна версия 1.1).

Заголовки — это набор пар имя-значение, разделенных двоеточием. 
В заголовках передается различная служебная информация: кодировка сообщения, 
название и версия браузера, адрес, с которого пришел клиент (Referrer) и так далее.

Тело сообщения — это, собственно, передаваемые данные. В ответе передаваемыми данными, 
как правило, является html-страница, которую запросил браузер, а в запросе, например, 
в теле сообщения передается содержимое файлов, загружаемых на сервер. Но как правило, 
тело сообщения в запросе вообще отсутствует.



Асинхронные HTTP

AJAX - сокращение от асинхронный, JS и XML
Позволяет выполнять асинхронные HTTP-запросы, т.е. отправку данных на сервер
и получение результатов без перезагрузки всей страницы
Не единственный способ отправлять асинхронные HTTP
Если используется AJAX, то в headers HTTP появляется заголовок 
HTTP_X_REQUESTED_WITH: XMLHttpRequest
